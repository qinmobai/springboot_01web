<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tian.mapper.EmployeeMapper">
    <resultMap id="empDept" type="employee">
        <id property="id" column="eid"/>
        <result property="name" column="ename"/>
        <result property="email" column="email"/>
        <result property="gender" column="gender"/>
        <result property="birthday" column="birthday"/>
        <association property="department" javaType="department">
            <id property="id" column="id"/>
            <result property="name" column="name"/>

        </association>

    </resultMap>

    <select id="findAll" resultMap="empDept">
        select e.id eid, e.name ename, e.email, e.gender, d.id, d.name, e.birthday
        from employee e,
             department d
        where e.deptId = d.id;
    </select>

    <select id="findEmployeeById" resultMap="empDept" parameterType="integer">
        select e.id eid, e.name ename, e.email, e.gender, d.id, d.name, e.birthday
        from employee e,
             department d
        where e.deptId = d.id
          and e.id = #{id};
    </select>

    <insert id="save" parameterType="employee">
        insert into employee(name, email, gender, birthday, deptId)
        values (#{name}, #{email}, #{gender}, #{birthday}, #{department.id});
    </insert>

    <update id="update" parameterType="employee">
        update employee
        set name     = #{name},
            email    = #{email},
            gender   = #{gender},
            birthday = #{birthday},
            deptId=#{department.id}
        where id = #{id};
    </update>

    <delete id="deleteEmp" parameterType="integer">
        delete from employee where id = #{id}
    </delete>
</mapper>